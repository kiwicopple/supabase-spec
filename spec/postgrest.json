{
  "id": 0,
  "name": "@supabase/postgrest-js",
  "kind": 0,
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 1,
      "name": "\"builder\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/copple/Projects/Temp/postgrest-js/src/builder.ts",
      "children": [
        {
          "id": 14,
          "name": "PostgrestBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true,
            "isAbstract": true
          },
          "comment": {
            "shortText": "Base builder"
          },
          "typeParameter": [
            {
              "id": 15,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              }
            }
          ],
          "children": [
            {
              "id": 24,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 25,
                  "name": "new PostgrestBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 26,
                      "name": "builder",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 14,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ],
                        "name": "PostgrestBuilder"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 14,
                    "name": "PostgrestBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 34
                }
              ]
            },
            {
              "id": 23,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "Partial"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      ],
                      "name": "Partial"
                    }
                  }
                ]
              }
            },
            {
              "id": 18,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 29,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 19,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExported": true
                  },
                  "indexSignature": [
                    {
                      "id": 20,
                      "name": "__index",
                      "kind": 8192,
                      "kindString": "Index signature",
                      "flags": {
                        "isExported": true
                      },
                      "parameters": [
                        {
                          "id": 21,
                          "name": "key",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExported": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "builder.ts",
                      "line": 29,
                      "character": 11
                    }
                  ]
                }
              }
            },
            {
              "id": 16,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "stringLiteral",
                    "value": "GET"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "HEAD"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "POST"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "PATCH"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "DELETE"
                  }
                ]
              }
            },
            {
              "id": 22,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 30,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 17,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 28,
                  "character": 5
                }
              ],
              "type": {
                "type": "reference",
                "name": "URL"
              }
            },
            {
              "id": 27,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 28,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 29,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 30,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExported": true
                              },
                              "signatures": [
                                {
                                  "id": 31,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExported": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 32,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExported": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 33,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 34,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExported": true
                              },
                              "signatures": [
                                {
                                  "id": 35,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExported": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 36,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExported": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 37,
                  "character": 6
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [24]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [23, 18, 16, 22, 17]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [27]
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 26,
              "character": 38
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 37,
              "name": "PostgrestQueryBuilder"
            },
            {
              "type": "reference",
              "id": 84,
              "name": "PostgrestTransformBuilder"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "PromiseLike"
            }
          ]
        },
        {
          "id": 130,
          "name": "PostgrestFilterBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "typeParameter": [
            {
              "id": 131,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "children": [
            {
              "id": 282,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 283,
                  "name": "new PostgrestFilterBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 284,
                      "name": "builder",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 14,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ],
                        "name": "PostgrestBuilder"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 130,
                    "name": "PostgrestFilterBuilder"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 24,
                    "name": "PostgrestBuilder.__constructor"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 34
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 24,
                "name": "PostgrestBuilder.__constructor"
              }
            },
            {
              "id": 281,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "Partial"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      ],
                      "name": "Partial"
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 23,
                "name": "PostgrestBuilder.body"
              }
            },
            {
              "id": 276,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 29,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 277,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": [
                    {
                      "id": 278,
                      "name": "__index",
                      "kind": 8192,
                      "kindString": "Index signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 279,
                          "name": "key",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "builder.ts",
                      "line": 29,
                      "character": 11
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 18,
                "name": "PostgrestBuilder.headers"
              }
            },
            {
              "id": 274,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "stringLiteral",
                    "value": "GET"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "HEAD"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "POST"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "PATCH"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "DELETE"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 16,
                "name": "PostgrestBuilder.method"
              }
            },
            {
              "id": 280,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 30,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 22,
                "name": "PostgrestBuilder.schema"
              }
            },
            {
              "id": 275,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 28,
                  "character": 5
                }
              ],
              "type": {
                "type": "reference",
                "name": "URL"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 17,
                "name": "PostgrestBuilder.url"
              }
            },
            {
              "id": 204,
              "name": "adj",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 205,
                  "name": "adj",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` is adjacent to\nthe specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 206,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 207,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 505,
                  "character": 5
                }
              ]
            },
            {
              "id": 184,
              "name": "cd",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 185,
                  "name": "cd",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose json, array, or range value on the stated `column` is\ncontained by the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 186,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 187,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "typeParameter",
                                  "name": "T"
                                }
                              },
                              "objectType": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          },
                          {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 436,
                  "character": 4
                }
              ]
            },
            {
              "id": 180,
              "name": "cs",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 181,
                  "name": "cs",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose json, array, or range value on the stated `column`\ncontains the values specified in `value`."
                  },
                  "parameters": [
                    {
                      "id": 182,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 183,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "typeParameter",
                                  "name": "T"
                                }
                              },
                              "objectType": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          },
                          {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 414,
                  "character": 4
                }
              ]
            },
            {
              "id": 140,
              "name": "eq",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 141,
                  "name": "eq",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` exactly matches the\nspecified `value`."
                  },
                  "parameters": [
                    {
                      "id": 142,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 143,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        },
                        "objectType": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 294,
                  "character": 4
                }
              ]
            },
            {
              "id": 240,
              "name": "filter",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 241,
                  "name": "filter",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose `column` satisfies the filter."
                  },
                  "parameters": [
                    {
                      "id": 242,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 243,
                      "name": "operator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The operator to filter with."
                      },
                      "type": {
                        "type": "reference",
                        "id": 299,
                        "name": "FilterOperator"
                      }
                    },
                    {
                      "id": 244,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 591,
                  "character": 8
                }
              ]
            },
            {
              "id": 212,
              "name": "fts",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 213,
                  "name": "fts",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nto_tsquery(`query`)."
                  },
                  "parameters": [
                    {
                      "id": 214,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 215,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The Postgres tsquery string to filter with."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 216,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__2",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 217,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 218,
                              "name": "config",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The text search configuration to use.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 536,
                                  "character": 46
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [218]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 536,
                              "character": 37
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 536,
                  "character": 5
                }
              ]
            },
            {
              "id": 148,
              "name": "gt",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 149,
                  "name": "gt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` is greater than the\nspecified `value`."
                  },
                  "parameters": [
                    {
                      "id": 150,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 151,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        },
                        "objectType": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 318,
                  "character": 4
                }
              ]
            },
            {
              "id": 152,
              "name": "gte",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 153,
                  "name": "gte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` is greater than or\nequal to the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 154,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 155,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        },
                        "objectType": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 330,
                  "character": 5
                }
              ]
            },
            {
              "id": 168,
              "name": "ilike",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 169,
                  "name": "ilike",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case insensitive)."
                  },
                  "parameters": [
                    {
                      "id": 170,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 171,
                      "name": "pattern",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The pattern to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 378,
                  "character": 7
                }
              ]
            },
            {
              "id": 176,
              "name": "in",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 177,
                  "name": "in",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` is found on the\nspecified `values`."
                  },
                  "parameters": [
                    {
                      "id": 178,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 179,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The values to filter with.\n"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "typeParameter",
                              "name": "T"
                            }
                          },
                          "objectType": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 402,
                  "character": 4
                }
              ]
            },
            {
              "id": 172,
              "name": "is",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 173,
                  "name": "is",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "A check for exact equality (null, true, false), finds all rows whose\nvalue on the stated `column` exactly match the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 174,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 175,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "intrinsic",
                            "name": "null"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 390,
                  "character": 4
                }
              ]
            },
            {
              "id": 164,
              "name": "like",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 165,
                  "name": "like",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value in the stated `column` matches the supplied\n`pattern` (case sensitive)."
                  },
                  "parameters": [
                    {
                      "id": 166,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 167,
                      "name": "pattern",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The pattern to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 366,
                  "character": 6
                }
              ]
            },
            {
              "id": 259,
              "name": "limit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 260,
                  "name": "limit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limits the result with the specified `count`."
                  },
                  "parameters": [
                    {
                      "id": 261,
                      "name": "count",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The maximum no. of rows to limit to."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 262,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 263,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 264,
                              "name": "foreignTable",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The foreign table to use (for foreign columns).\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 197,
                                  "character": 18
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [264]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 196,
                              "character": 18
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 94,
                    "name": "PostgrestTransformBuilder.limit"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 195,
                  "character": 7
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 94,
                "name": "PostgrestTransformBuilder.limit"
              }
            },
            {
              "id": 156,
              "name": "lt",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 157,
                  "name": "lt",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` is less than the\nspecified `value`."
                  },
                  "parameters": [
                    {
                      "id": 158,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 159,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        },
                        "objectType": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 342,
                  "character": 4
                }
              ]
            },
            {
              "id": 160,
              "name": "lte",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 161,
                  "name": "lte",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` is less than or equal\nto the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 162,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 163,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        },
                        "objectType": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 354,
                  "character": 5
                }
              ]
            },
            {
              "id": 245,
              "name": "match",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 246,
                  "name": "match",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose columns match the specified `query` object."
                  },
                  "parameters": [
                    {
                      "id": 247,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The object to filter with, with column names as keys mapped\n              to their filter values.\n"
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 248,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "indexSignature": [
                            {
                              "id": 249,
                              "name": "__index",
                              "kind": 8192,
                              "kindString": "Index signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 250,
                                  "name": "key",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 602,
                              "character": 14
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "unknown",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 602,
                  "character": 7
                }
              ]
            },
            {
              "id": 144,
              "name": "neq",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 145,
                  "name": "neq",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose value on the stated `column` doesn't match the\nspecified `value`."
                  },
                  "parameters": [
                    {
                      "id": 146,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 147,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        },
                        "objectType": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 306,
                  "character": 5
                }
              ]
            },
            {
              "id": 132,
              "name": "not",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 133,
                  "name": "not",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows which doesn't satisfy the filter."
                  },
                  "parameters": [
                    {
                      "id": 134,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 135,
                      "name": "operator",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The operator to filter with."
                      },
                      "type": {
                        "type": "reference",
                        "id": 299,
                        "name": "FilterOperator"
                      }
                    },
                    {
                      "id": 136,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 272,
                  "character": 5
                }
              ]
            },
            {
              "id": 196,
              "name": "nxl",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 197,
                  "name": "nxl",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the left of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 198,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 199,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 481,
                  "character": 5
                }
              ]
            },
            {
              "id": 200,
              "name": "nxr",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 201,
                  "name": "nxr",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` does not extend\nto the right of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 202,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 203,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 493,
                  "character": 5
                }
              ]
            },
            {
              "id": 137,
              "name": "or",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 138,
                  "name": "or",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows satisfying at least one of the filters."
                  },
                  "parameters": [
                    {
                      "id": 139,
                      "name": "filters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The filters to use, separated by commas.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 282,
                  "character": 4
                }
              ]
            },
            {
              "id": 251,
              "name": "order",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 252,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Orders the result with the specified `column`."
                  },
                  "parameters": [
                    {
                      "id": 253,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to order on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 254,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 255,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 256,
                              "name": "ascending",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "If `true`, the result will be in ascending order."
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 176,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "true"
                            },
                            {
                              "id": 258,
                              "name": "foreignTable",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The foreign table to use (if `column` is a foreign column).\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 178,
                                  "character": 18
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 257,
                              "name": "nullsFirst",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "If `true`, `null`s appear first."
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 177,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "false"
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [256, 258, 257]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 174,
                              "character": 20
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 86,
                    "name": "PostgrestTransformBuilder.order"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 173,
                  "character": 7
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 86,
                "name": "PostgrestTransformBuilder.order"
              }
            },
            {
              "id": 208,
              "name": "ov",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 209,
                  "name": "ov",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose array or range value on the stated `column` is\ncontained by the specified `value`."
                  },
                  "parameters": [
                    {
                      "id": 210,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 211,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The value to filter with.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "indexedAccess",
                              "indexType": {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "typeParameter",
                                  "name": "T"
                                }
                              },
                              "objectType": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 517,
                  "character": 4
                }
              ]
            },
            {
              "id": 226,
              "name": "phfts",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 227,
                  "name": "phfts",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nphraseto_tsquery(`query`)."
                  },
                  "parameters": [
                    {
                      "id": 228,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 229,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The Postgres tsquery string to filter with."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 230,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__2",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 231,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 232,
                              "name": "config",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The text search configuration to use.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 564,
                                  "character": 48
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [232]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 564,
                              "character": 39
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 564,
                  "character": 7
                }
              ]
            },
            {
              "id": 219,
              "name": "plfts",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 220,
                  "name": "plfts",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nplainto_tsquery(`query`)."
                  },
                  "parameters": [
                    {
                      "id": 221,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 222,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The Postgres tsquery string to filter with."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 223,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__2",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 224,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 225,
                              "name": "config",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The text search configuration to use.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 550,
                                  "character": 48
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [225]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 550,
                              "character": 39
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 550,
                  "character": 7
                }
              ]
            },
            {
              "id": 265,
              "name": "range",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 266,
                  "name": "range",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limits the result to rows within the specified range, inclusive."
                  },
                  "parameters": [
                    {
                      "id": 267,
                      "name": "from",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The starting index from which to limit the result, inclusive."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 268,
                      "name": "to",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The last index to which to limit the result, inclusive."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 269,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__2",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 270,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 271,
                              "name": "foreignTable",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The foreign table to use (for foreign columns).\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 214,
                                  "character": 18
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [271]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 213,
                              "character": 15
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 100,
                    "name": "PostgrestTransformBuilder.range"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 211,
                  "character": 7
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 100,
                "name": "PostgrestTransformBuilder.range"
              }
            },
            {
              "id": 272,
              "name": "single",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 273,
                  "name": "single",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
                  },
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 107,
                    "name": "PostgrestTransformBuilder.single"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 228,
                  "character": 8
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 107,
                "name": "PostgrestTransformBuilder.single"
              }
            },
            {
              "id": 188,
              "name": "sl",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 189,
                  "name": "sl",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` is strictly to the\nleft of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 190,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 191,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 457,
                  "character": 4
                }
              ]
            },
            {
              "id": 192,
              "name": "sr",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 193,
                  "name": "sr",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose range value on the stated `column` is strictly to\nthe right of the specified `range`."
                  },
                  "parameters": [
                    {
                      "id": 194,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 195,
                      "name": "range",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The range to filter with.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 469,
                  "character": 4
                }
              ]
            },
            {
              "id": 285,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 286,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 287,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 288,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 289,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 290,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 291,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 292,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 293,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 294,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 27,
                    "name": "PostgrestBuilder.then"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 37,
                  "character": 6
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 27,
                "name": "PostgrestBuilder.then"
              }
            },
            {
              "id": 233,
              "name": "wfts",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 234,
                  "name": "wfts",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Finds all rows whose tsvector value on the stated `column` matches\nwebsearch_to_tsquery(`query`)."
                  },
                  "parameters": [
                    {
                      "id": 235,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to filter on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 236,
                      "name": "query",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The Postgres tsquery string to filter with."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 237,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__2",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 238,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 239,
                              "name": "config",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The text search configuration to use.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 578,
                                  "character": 47
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [239]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 578,
                              "character": 38
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 578,
                  "character": 6
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [282]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [281, 276, 274, 280, 275]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                204,
                184,
                180,
                140,
                240,
                212,
                148,
                152,
                168,
                176,
                172,
                164,
                259,
                156,
                160,
                245,
                144,
                132,
                196,
                200,
                137,
                251,
                208,
                226,
                219,
                265,
                272,
                188,
                192,
                285,
                233
              ]
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 264,
              "character": 28
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 84,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ],
              "name": "PostgrestTransformBuilder"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "PromiseLike"
            }
          ]
        },
        {
          "id": 37,
          "name": "PostgrestQueryBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "CRUD"
          },
          "typeParameter": [
            {
              "id": 38,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              }
            }
          ],
          "children": [
            {
              "id": 39,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 40,
                  "name": "new PostgrestQueryBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 41,
                      "name": "url",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 42,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 43,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExported": true
                          },
                          "children": [
                            {
                              "id": 44,
                              "name": "headers",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isExported": true
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 83,
                                  "character": 13
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 45,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {
                                    "isExported": true
                                  },
                                  "indexSignature": [
                                    {
                                      "id": 46,
                                      "name": "__index",
                                      "kind": 8192,
                                      "kindString": "Index signature",
                                      "flags": {
                                        "isExported": true
                                      },
                                      "parameters": [
                                        {
                                          "id": 47,
                                          "name": "key",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isExported": true
                                          },
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 48,
                              "name": "schema",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isExported": true
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 83,
                                  "character": 26
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [44, 48]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 82,
                              "character": 16
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 37,
                    "name": "PostgrestQueryBuilder"
                  },
                  "overwrites": {
                    "type": "reference",
                    "id": 24,
                    "name": "PostgrestBuilder.__constructor"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 80,
                  "character": 67
                }
              ],
              "overwrites": {
                "type": "reference",
                "id": 24,
                "name": "PostgrestBuilder.__constructor"
              }
            },
            {
              "id": 73,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "Partial"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      ],
                      "name": "Partial"
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 23,
                "name": "PostgrestBuilder.body"
              }
            },
            {
              "id": 68,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 29,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 69,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExported": true
                  },
                  "indexSignature": [
                    {
                      "id": 70,
                      "name": "__index",
                      "kind": 8192,
                      "kindString": "Index signature",
                      "flags": {
                        "isExported": true
                      },
                      "parameters": [
                        {
                          "id": 71,
                          "name": "key",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExported": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "builder.ts",
                      "line": 29,
                      "character": 11
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 18,
                "name": "PostgrestBuilder.headers"
              }
            },
            {
              "id": 66,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "stringLiteral",
                    "value": "GET"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "HEAD"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "POST"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "PATCH"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "DELETE"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 16,
                "name": "PostgrestBuilder.method"
              }
            },
            {
              "id": 72,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 30,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 22,
                "name": "PostgrestBuilder.schema"
              }
            },
            {
              "id": 67,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 28,
                  "character": 5
                }
              ],
              "type": {
                "type": "reference",
                "name": "URL"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 17,
                "name": "PostgrestBuilder.url"
              }
            },
            {
              "id": 61,
              "name": "delete",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 62,
                  "name": "delete",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Performs a DELETE on the table."
                  },
                  "type": {
                    "type": "reference",
                    "id": 130,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestFilterBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 146,
                  "character": 8
                }
              ]
            },
            {
              "id": 52,
              "name": "insert",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 53,
                  "name": "insert",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Performs an INSERT into the table."
                  },
                  "parameters": [
                    {
                      "id": 54,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "text": "The values to insert."
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ],
                            "name": "Partial"
                          },
                          {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "typeParameter",
                                  "name": "T"
                                }
                              ],
                              "name": "Partial"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 55,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 56,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExported": true
                          },
                          "children": [
                            {
                              "id": 57,
                              "name": "upsert",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isExported": true
                              },
                              "comment": {
                                "text": "If `true`, performs an UPSERT.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 122,
                                  "character": 52
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "false"
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [57]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 122,
                              "character": 43
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 14,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 122,
                  "character": 8
                }
              ]
            },
            {
              "id": 49,
              "name": "select",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 50,
                  "name": "select",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Performs horizontal filtering with SELECT."
                  },
                  "parameters": [
                    {
                      "id": 51,
                      "name": "columns",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "text": "The columns to retrieve, separated by commas.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"*\""
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 130,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestFilterBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 96,
                  "character": 8
                }
              ]
            },
            {
              "id": 74,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 75,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 76,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 77,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExported": true
                              },
                              "signatures": [
                                {
                                  "id": 78,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExported": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 79,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExported": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 80,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 81,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {
                                "isExported": true
                              },
                              "signatures": [
                                {
                                  "id": 82,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {
                                    "isExported": true
                                  },
                                  "parameters": [
                                    {
                                      "id": 83,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {
                                        "isExported": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 27,
                    "name": "PostgrestBuilder.then"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 37,
                  "character": 6
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 27,
                "name": "PostgrestBuilder.then"
              }
            },
            {
              "id": 58,
              "name": "update",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 59,
                  "name": "update",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Performs an UPDATE on the table."
                  },
                  "parameters": [
                    {
                      "id": 60,
                      "name": "values",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "text": "The values to update.\n"
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ],
                        "name": "Partial"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 130,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestFilterBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 136,
                  "character": 8
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [39]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [73, 68, 66, 72, 67]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [61, 52, 49, 74, 58]
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 80,
              "character": 34
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 14,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ],
              "name": "PostgrestBuilder"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "PromiseLike"
            }
          ]
        },
        {
          "id": 84,
          "name": "PostgrestTransformBuilder",
          "kind": 128,
          "kindString": "Class",
          "flags": {},
          "comment": {
            "shortText": "Post-filters (transforms)"
          },
          "typeParameter": [
            {
              "id": 85,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "children": [
            {
              "id": 117,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {},
              "signatures": [
                {
                  "id": 118,
                  "name": "new PostgrestTransformBuilder",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 119,
                      "name": "builder",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 14,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ],
                        "name": "PostgrestBuilder"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "name": "PostgrestTransformBuilder"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 24,
                    "name": "PostgrestBuilder.__constructor"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 34
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 24,
                "name": "PostgrestBuilder.__constructor"
              }
            },
            {
              "id": 116,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 31,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "Partial"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      ],
                      "name": "Partial"
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 23,
                "name": "PostgrestBuilder.body"
              }
            },
            {
              "id": 111,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 29,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 112,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": [
                    {
                      "id": 113,
                      "name": "__index",
                      "kind": 8192,
                      "kindString": "Index signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 114,
                          "name": "key",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "builder.ts",
                      "line": 29,
                      "character": 11
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 18,
                "name": "PostgrestBuilder.headers"
              }
            },
            {
              "id": 109,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "stringLiteral",
                    "value": "GET"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "HEAD"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "POST"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "PATCH"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "DELETE"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 16,
                "name": "PostgrestBuilder.method"
              }
            },
            {
              "id": 115,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 30,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 22,
                "name": "PostgrestBuilder.schema"
              }
            },
            {
              "id": 110,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 28,
                  "character": 5
                }
              ],
              "type": {
                "type": "reference",
                "name": "URL"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 17,
                "name": "PostgrestBuilder.url"
              }
            },
            {
              "id": 94,
              "name": "limit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 95,
                  "name": "limit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limits the result with the specified `count`."
                  },
                  "parameters": [
                    {
                      "id": 96,
                      "name": "count",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The maximum no. of rows to limit to."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 97,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 98,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 99,
                              "name": "foreignTable",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The foreign table to use (for foreign columns).\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 197,
                                  "character": 18
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [99]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 196,
                              "character": 18
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 195,
                  "character": 7
                }
              ]
            },
            {
              "id": 86,
              "name": "order",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 87,
                  "name": "order",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Orders the result with the specified `column`."
                  },
                  "parameters": [
                    {
                      "id": 88,
                      "name": "column",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The column to order on."
                      },
                      "type": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      }
                    },
                    {
                      "id": 89,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 90,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 91,
                              "name": "ascending",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "If `true`, the result will be in ascending order."
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 176,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "true"
                            },
                            {
                              "id": 93,
                              "name": "foreignTable",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The foreign table to use (if `column` is a foreign column).\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 178,
                                  "character": 18
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 92,
                              "name": "nullsFirst",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "If `true`, `null`s appear first."
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 177,
                                  "character": 16
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "false"
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [91, 93, 92]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 174,
                              "character": 20
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 173,
                  "character": 7
                }
              ]
            },
            {
              "id": 100,
              "name": "range",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 101,
                  "name": "range",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Limits the result to rows within the specified range, inclusive."
                  },
                  "parameters": [
                    {
                      "id": 102,
                      "name": "from",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The starting index from which to limit the result, inclusive."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 103,
                      "name": "to",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "The last index to which to limit the result, inclusive."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 104,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "originalName": "__2",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 105,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 106,
                              "name": "foreignTable",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "comment": {
                                "text": "The foreign table to use (for foreign columns).\n"
                              },
                              "sources": [
                                {
                                  "fileName": "builder.ts",
                                  "line": 214,
                                  "character": 18
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [106]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "builder.ts",
                              "line": 213,
                              "character": 15
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 211,
                  "character": 7
                }
              ]
            },
            {
              "id": 107,
              "name": "single",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 108,
                  "name": "single",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Retrieves only one row from the result. Result must be one row (e.g. using\n`limit`), otherwise this will result in an error."
                  },
                  "type": {
                    "type": "reference",
                    "id": 84,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ],
                    "name": "PostgrestTransformBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 228,
                  "character": 8
                }
              ]
            },
            {
              "id": 120,
              "name": "then",
              "kind": 2048,
              "kindString": "Method",
              "flags": {},
              "signatures": [
                {
                  "id": 121,
                  "name": "then",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 122,
                      "name": "onfulfilled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 123,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 124,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 125,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 126,
                      "name": "onrejected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 127,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 128,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 129,
                                      "name": "value",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "any"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 27,
                    "name": "PostgrestBuilder.then"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 37,
                  "character": 6
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 27,
                "name": "PostgrestBuilder.then"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [117]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [116, 111, 109, 115, 110]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [94, 86, 100, 107, 120]
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 164,
              "character": 31
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 14,
              "typeArguments": [
                {
                  "type": "typeParameter",
                  "name": "T"
                }
              ],
              "name": "PostgrestBuilder"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 130,
              "name": "PostgrestFilterBuilder"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "PromiseLike"
            }
          ]
        },
        {
          "id": 2,
          "name": "PostgrestError",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "children": [
            {
              "id": 6,
              "name": "code",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 9,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 4,
              "name": "details",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 7,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 5,
              "name": "hint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 8,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 3,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 6,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [6, 4, 5, 3]
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 5,
              "character": 24
            }
          ]
        },
        {
          "id": 7,
          "name": "PostgrestResponse",
          "kind": 256,
          "kindString": "Interface",
          "flags": {},
          "typeParameter": [
            {
              "id": 8,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "children": [
            {
              "id": 13,
              "name": "body",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 19,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  },
                  {
                    "type": "intrinsic",
                    "name": "null"
                  }
                ]
              }
            },
            {
              "id": 10,
              "name": "data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 15,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  },
                  {
                    "type": "intrinsic",
                    "name": "null"
                  }
                ]
              }
            },
            {
              "id": 9,
              "name": "error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 14,
                  "character": 7
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 2,
                    "name": "PostgrestError"
                  },
                  {
                    "type": "intrinsic",
                    "name": "null"
                  }
                ]
              }
            },
            {
              "id": 11,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 16,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 12,
              "name": "statusText",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "builder.ts",
                  "line": 17,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [13, 10, 9, 11, 12]
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 13,
              "character": 27
            }
          ]
        },
        {
          "id": 299,
          "name": "FilterOperator",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {},
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 240,
              "character": 19
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "stringLiteral",
                "value": "eq"
              },
              {
                "type": "stringLiteral",
                "value": "neq"
              },
              {
                "type": "stringLiteral",
                "value": "gt"
              },
              {
                "type": "stringLiteral",
                "value": "gte"
              },
              {
                "type": "stringLiteral",
                "value": "lt"
              },
              {
                "type": "stringLiteral",
                "value": "lte"
              },
              {
                "type": "stringLiteral",
                "value": "like"
              },
              {
                "type": "stringLiteral",
                "value": "ilike"
              },
              {
                "type": "stringLiteral",
                "value": "is"
              },
              {
                "type": "stringLiteral",
                "value": "in"
              },
              {
                "type": "stringLiteral",
                "value": "cs"
              },
              {
                "type": "stringLiteral",
                "value": "cd"
              },
              {
                "type": "stringLiteral",
                "value": "sl"
              },
              {
                "type": "stringLiteral",
                "value": "sr"
              },
              {
                "type": "stringLiteral",
                "value": "nxl"
              },
              {
                "type": "stringLiteral",
                "value": "nxr"
              },
              {
                "type": "stringLiteral",
                "value": "adj"
              },
              {
                "type": "stringLiteral",
                "value": "ov"
              },
              {
                "type": "stringLiteral",
                "value": "fts"
              },
              {
                "type": "stringLiteral",
                "value": "plfts"
              },
              {
                "type": "stringLiteral",
                "value": "phfts"
              },
              {
                "type": "stringLiteral",
                "value": "wfts"
              }
            ]
          }
        },
        {
          "id": 295,
          "name": "cleanFilterArray",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isConst": true
          },
          "comment": {
            "shortText": "Filters"
          },
          "signatures": [
            {
              "id": 296,
              "name": "cleanFilterArray",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Filters"
              },
              "typeParameter": [
                {
                  "id": 297,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 298,
                  "name": "filter",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "typeParameter",
                          "name": "T"
                        }
                      },
                      "objectType": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "sources": [
            {
              "fileName": "builder.ts",
              "line": 238,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [14, 130, 37, 84]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [2, 7]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [299]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [295]
        }
      ],
      "sources": [
        {
          "fileName": "builder.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 300,
      "name": "\"index\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/copple/Projects/Temp/postgrest-js/src/index.ts",
      "children": [
        {
          "id": 301,
          "name": "PostgrestClient",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 308,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Creates a PostgREST client."
              },
              "signatures": [
                {
                  "id": 309,
                  "name": "new PostgrestClient",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Creates a PostgREST client."
                  },
                  "parameters": [
                    {
                      "id": 310,
                      "name": "url",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "shortText": "URL of the PostgREST endpoint."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 311,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "originalName": "__1",
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 312,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExported": true
                          },
                          "children": [
                            {
                              "id": 313,
                              "name": "headers",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isExported": true
                              },
                              "comment": {
                                "text": "Custom headers."
                              },
                              "sources": [
                                {
                                  "fileName": "index.ts",
                                  "line": 17,
                                  "character": 13
                                }
                              ],
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 314,
                                  "name": "__type",
                                  "kind": 65536,
                                  "kindString": "Type literal",
                                  "flags": {
                                    "isExported": true
                                  },
                                  "indexSignature": [
                                    {
                                      "id": 315,
                                      "name": "__index",
                                      "kind": 8192,
                                      "kindString": "Index signature",
                                      "flags": {
                                        "isExported": true
                                      },
                                      "parameters": [
                                        {
                                          "id": 316,
                                          "name": "key",
                                          "kind": 32768,
                                          "kindString": "Parameter",
                                          "flags": {
                                            "isExported": true
                                          },
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "string"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "id": 317,
                              "name": "schema",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isExported": true
                              },
                              "comment": {
                                "text": "Postgres schema to switch to.\n"
                              },
                              "sources": [
                                {
                                  "fileName": "index.ts",
                                  "line": 17,
                                  "character": 26
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "undefined"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [313, 317]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "index.ts",
                              "line": 16,
                              "character": 16
                            }
                          ]
                        }
                      },
                      "defaultValue": "{}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 301,
                    "name": "PostgrestClient"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 6,
                  "character": 17
                }
              ]
            },
            {
              "id": 303,
              "name": "headers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 5,
                  "character": 9
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 304,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExported": true
                  },
                  "indexSignature": [
                    {
                      "id": 305,
                      "name": "__index",
                      "kind": 8192,
                      "kindString": "Index signature",
                      "flags": {
                        "isExported": true
                      },
                      "parameters": [
                        {
                          "id": 306,
                          "name": "key",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isExported": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "index.ts",
                      "line": 5,
                      "character": 10
                    }
                  ]
                }
              }
            },
            {
              "id": 307,
              "name": "schema",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 6,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 302,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 4,
                  "character": 5
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 318,
              "name": "auth",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 319,
                  "name": "auth",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Authenticates the request with JWT."
                  },
                  "parameters": [
                    {
                      "id": 320,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "text": "The JWT token to use.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "this"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 29,
                  "character": 6
                }
              ]
            },
            {
              "id": 321,
              "name": "from",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 322,
                  "name": "from",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Perform a table operation."
                  },
                  "typeParameter": [
                    {
                      "id": 323,
                      "name": "T",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {
                        "isExported": true
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 324,
                      "name": "table",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "text": "The table name to operate on.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 37,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T",
                        "default": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    ],
                    "name": "PostgrestQueryBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 39,
                  "character": 6
                }
              ]
            },
            {
              "id": 325,
              "name": "rpc",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 326,
                  "name": "rpc",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Perform a stored procedure call."
                  },
                  "typeParameter": [
                    {
                      "id": 327,
                      "name": "T",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {
                        "isExported": true
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 328,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "comment": {
                        "text": "The function name to call."
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 329,
                      "name": "params",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "comment": {
                        "text": "The parameters to pass to the function call.\n"
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "object"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 14,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T",
                        "default": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    ],
                    "name": "PostgrestBuilder"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "index.ts",
                  "line": 50,
                  "character": 5
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [308]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [303, 307, 302]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [318, 321, 325]
            }
          ],
          "sources": [
            {
              "fileName": "index.ts",
              "line": 3,
              "character": 28
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [301]
        }
      ],
      "sources": [
        {
          "fileName": "index.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 1,
      "children": [1, 300]
    }
  ]
}
